def solve(number, is_adjacent: bool = True):
    result = 0
    split = 1
    if not is_adjacent:
        split = int(len(number) / 2)

    for i, val in enumerate(number):
        if number[i] == number[(i + split) % len(number)]:
            result += int(number[i])
    return result


# question 1
print(solve("1122"))  # -> 3
print(solve("1111"))  # -> 4
print(solve("1234"))  # -> 0
print(solve("91212129"))  # -> 9
print(solve("2175234281493376693817212167497687911136241765326152235785581689365646244916837735928524481848972386998" +
            "7861247912289729579296691684761143544956991583942215236568961875851755854977946147178746464675227699149" +
            "9252272271375574797699485697888843993798211113825367226995757594744732739397563489927146679635961897657" +
            "3474316948959912577144334819338356615984359354113474939256986548157835982584439445417321985791934934144" +
            "2148282229689541561169341622222354651397342928678496478671339383923769856425795211323673389723181967933" +
            "9338327115458856539528618792315379762925178663548129431927282632695247356984233366737351589938535561488" +
            "3386132795926225475664782773914528357779348152676815692113842831893936185972177855626451964343587183574" +
            "4859243167227889562738712953651128317624673985213525897522378259178625416722152155728615936587369515254" +
            "9368286685648572832264398812668719459987964884722491825388833541865739251831526638626839954496716632857" +
            "7539745387626272256745243591477736352281759474194663898657179365588946641989599692412291577722449948149" +
            "6837343194149123735355268151941712871245863553836953349887831949788869852929147849489265325843934669999" +
            "3918462863192686867893725139765222825875268661481663372159614935362628515122187941392723612928115298881" +
            "6119879929796689336655311535363929825678881938527247118721357918552352134165111794767678534114623544141" +
            "1441813242514813227821843819424619974979886871646621918865274574538951761567855845681272364646138584716" +
            "3335998438351673735252485475424429425831226245344944425162596169732358584691311597731673349536586732715" +
            "9974894295698195469944452868962884869444681882546548512286974283971147112986263212863577965836575636286" +
            "3627135983617613332849756371986376967117549251566281992964573929655589313871976556784849231916513831538" +
            "2548123471162539498186335271851742215652797757667422626877131141143448435349588333726341821768663154415" +
            "8388717775922259885373511419187427771143465385481684158922991416468136449742932446319366933782746766177" +
            "3833517841763711156376147664749175267212562321567728575765844893232718971471289841171642868948852136818" +
            "661741238178676857381583155547755219837116125995361896562498721571413742"))  # -> 1119

# question 2
print(solve("1212", False))  # -> 6
print(solve("2175234281493376693817212167497687911136241765326152235785581689365646244916837735928524481848972386998" +
            "7861247912289729579296691684761143544956991583942215236568961875851755854977946147178746464675227699149" +
            "9252272271375574797699485697888843993798211113825367226995757594744732739397563489927146679635961897657" +
            "3474316948959912577144334819338356615984359354113474939256986548157835982584439445417321985791934934144" +
            "2148282229689541561169341622222354651397342928678496478671339383923769856425795211323673389723181967933" +
            "9338327115458856539528618792315379762925178663548129431927282632695247356984233366737351589938535561488" +
            "3386132795926225475664782773914528357779348152676815692113842831893936185972177855626451964343587183574" +
            "4859243167227889562738712953651128317624673985213525897522378259178625416722152155728615936587369515254" +
            "9368286685648572832264398812668719459987964884722491825388833541865739251831526638626839954496716632857" +
            "7539745387626272256745243591477736352281759474194663898657179365588946641989599692412291577722449948149" +
            "6837343194149123735355268151941712871245863553836953349887831949788869852929147849489265325843934669999" +
            "3918462863192686867893725139765222825875268661481663372159614935362628515122187941392723612928115298881" +
            "6119879929796689336655311535363929825678881938527247118721357918552352134165111794767678534114623544141" +
            "1441813242514813227821843819424619974979886871646621918865274574538951761567855845681272364646138584716" +
            "3335998438351673735252485475424429425831226245344944425162596169732358584691311597731673349536586732715" +
            "9974894295698195469944452868962884869444681882546548512286974283971147112986263212863577965836575636286" +
            "3627135983617613332849756371986376967117549251566281992964573929655589313871976556784849231916513831538" +
            "2548123471162539498186335271851742215652797757667422626877131141143448435349588333726341821768663154415" +
            "8388717775922259885373511419187427771143465385481684158922991416468136449742932446319366933782746766177" +
            "3833517841763711156376147664749175267212562321567728575765844893232718971471289841171642868948852136818" +
            "661741238178676857381583155547755219837116125995361896562498721571413742", False))  # -> 1420




